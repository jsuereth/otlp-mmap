# Mmap SDK OTLP Demo
# 
# This demo replaces the entire SDK in java with something that pushes
# data into an MMAP file as quickly as possible.
#
# A machine-local (but separate container) collector reads the file
# and processes data into actual OTLP which is sent to an
# OpenTelemetry collector
x-otlp-mmap-volume:
  &otlp-mmap-volume
  type: bind
  source: ./export
  target: /otlp/export
services:
  # OpenTelemetry collector actually pull
  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.72.0
    volumes:
      - ./otel-config:/otel-config
    command: ["--config=/otel-config/otel-throughput-config.yaml"]
    ports:
      - "4317:4317"
  # The actual HTTP server that is instrumented.
  java_http_server:
    image: otel/mmap-demo:latest
    volumes: 
      - ./export:/otlp/export
    environment:
      SDK_MMAP_EXPORTER_FILE: /otlp/export/mmap-throughput.otlp
      HTTP_ENDPOINT_PORT: 8081
    # TODO - share definiton w/ mmap collector
    ports:
      - "8081:8081"
  # Collector for the MMAP sdk file that will send OTLP to the otel collector.
  mmap_collector:
    image: otel/otlp-mmap-collector:latest
    depends_on:
      - otel_collector
      - java_http_server
    environment:
      SDK_MMAP_EXPORTER_FILE: /otlp/export/mmap-throughput.otlp
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel_collector:4317      
    # TODO - share definiton w/ demo
    volumes: 
      - ./export:/otlp/export
  # Load tester for our HTTP server
  k6_loadtester:
    image: grafana/k6:latest
    container_name: k6_loadtester
    command: ["run", "/config/k6-load-test.js"]
    environment:
      TARGET_URL: http://java_http_server:8081/
    depends_on:
      - java_http_server
    volumes: 
      - ./k6-config:/config